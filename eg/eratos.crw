;; eratos.crw - Sieve of Eratosthenes

(def (init n) (make-vec (- n 1) 't))

(def (&loop! v n step lim)
  (if (<= n lim)
      (body (vec-set! v (- n 2) '())
            (&loop! v (+ n step) step lim))))
(def (loop! v n lim) (&loop! v (+ n n) n lim))

(def (&calc! v i lim)
  (cond ((> i lim) '())
        ((vec-ref v (- i 2))
         (loop! v i lim)
         (&calc! v (+ i 1) lim))
        (else (&calc! v (+ i 1) lim))))
(def (calc! v n) (&calc! v 2 n))

(def (prime? n)
  (if (> n 1)
      (let ((v (init n)))
        (calc! v n)
        (vec-ref v (- n 2)))))
